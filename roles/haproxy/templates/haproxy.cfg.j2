global
    maxconn 50000
    maxpipes 50000
    tune.maxaccept 500
    log /dev/log    local0
    log /dev/log    local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

    # Default SSL material locations
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    # Default ciphers to use on SSL-enabled listening sockets.xxx
    # For more information, see ciphers(1SSL). This list is from:
    #  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
    # An alternative list with additional directives can be obtained from
    #  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
    ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
    ssl-default-bind-options no-sslv3
    ssl-dh-param-file /opt/certbot/dhparams.pem

defaults
    log     global
    mode    http
    option  httplog
    option  dontlognull
    timeout connect 5000
    timeout client  50000
    timeout server  50000
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

    stats enable
    stats hide-version
    stats refresh 30s
    stats show-node
    stats uri /stats
    stats realm Haproxy\ Statistics
    stats auth {{haproxy_stats_user}}:{{haproxy_stats_password}}

frontend http-in
    bind *:80

    acl is_certbot path_beg -i /.well-known/acme-challenge
    use_backend certbot if is_certbot

    redirect scheme https code 301 if !is_certbot

{% if certbot_cert_check_result.stat.exists %}
frontend https-in
    bind *:443 ssl crt /opt/certbot/haproxy_fullchains/__fallback.pem crt /opt/certbot/haproxy_fullchains alpn h2,http/1.1

    http-request set-header X-Forwarded-Proto https

    http-response set-header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"

    default_backend backend docker_swarm_layer7
{% else %}
    # SSL not yet activated because certificates do not exist yet.
    # To create the certificates, run:
    # sudo /opt/certbot/scripts/run-certbot
    # Then execute the playbooks again.
{% endif %}

backend docker_swarm_layer7
    mode http
    balance source
    option tcp-check
    option log-health-checks
    server host01 {{groups['managers'][0]}}:80 check port 80
    server host02 {{groups['managers'][1]}}:80 check port 80
    server host03 {{groups['managers'][2]}}:80 check port 80